name: 'Continuous Delivery'

on:
  push:
    branches:
      - main
      - 'release/*'

  pull_request:
    branches:
      - main
      - 'release/*'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v4.1.1
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-test.txt

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
      
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Use gcloud CLI
        run: gcloud info

      - name: Authenticate Docker to Artifact Registry
        run: gcloud auth configure-docker ${{secrets.REGISTRY_HOST}} --quiet

      - name: Push Docker image to Artifact Registry
        env: 
          GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT_ID}}
        run:  |
          DOCKER_IMAGE="us-central1-docker.pkg.dev/${GOOGLE_PROJECT}/${{secrets.ARTIFACT_REGISTRY}}/${{ secrets.IMAGE_NAME}}:latest"
          gcloud auth configure-docker ${{secrets.REGISTRY_HOST}}
          docker build -t $DOCKER_IMAGE .
          docker push $DOCKER_IMAGE   

      - name: Deploy to Cloud Run
        run: |
          gcloud run services update ${{secrets.CLOUD_RUN_SERVICE_NAME}} --service-account github-actions@${{secrets.GCP_PROJECT_ID}}.iam.gserviceaccount.com --region ${{secrets.REGION}}
          gcloud run deploy ${{secrets.CLOUD_RUN_SERVICE_NAME}} \
            --image ${{secrets.REGISTRY_HOST}}/${{secrets.GCP_PROJECT_ID}}/${{secrets.ARTIFACT_REGISTRY}}/${{secrets.IMAGE_NAME}}:latest \
            --region ${{secrets.REGION}} \
            --platform=managed \
            --allow-unauthenticated \
            --memory=1Gi \
            --cpu=2 \
            --max-instances=10 \
            --min-instances=1 \
            --concurrency=10 \
            --timeout=60s
      
      - name: Run Stress Tests
        run: make stress-test
